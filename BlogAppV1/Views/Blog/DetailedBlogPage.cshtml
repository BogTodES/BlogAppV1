@{ 
    ViewData["Title"] = "Blog Page";
}

@model BlogAppV1.ViewModels.DetailedBlogVm
@inject BlogAppV1.Entities.DTOs.CurrentUserDto CurrentUser

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>@Model.Title - @Model.OwnerUsername</title>
</head>
<body>
    <div class="container justify-content-center">
        <div class="row justify-content-center">
            <div class="flex-column text-center">
                <h1 class="text-capitalize text-center">
                    @Model.Title
                </h1>
                <h3 class="text-muted font-weight-lighter">
                    from @Model.OwnerUsername
                </h3>
            </div>
            @if (CurrentUser.IsAuthenticated && CurrentUser.Username == Model.OwnerUsername)
            {
                <div class="clearfix ml-auto">
                    <form asp-controller="Blog" asp-action="EditBlogId" asp-route-id="@Model.BlogId"
                          method="post" class="form-horizontal clearfix float-right">
                        <a asp-controller="Blog" asp-action="EditBlogId" asp-route-id="@Model.BlogId"
                           method="post" class="form-horizontal clearfix float-right">
                            <input type="submit" value="Edit" />
                        </a>
                    </form>
                </div>
            }
        </div>
        <div class="row justify-content-center">
                @foreach (var sectId in Model.SectionsIds)
                {
                    <div class="col border-info rounded m-3">
                        @*<vc:MainScreenSection id="@sectId">
                        </vc:MainScreenSection>*@
                        @await Component.InvokeAsync("MainScreenSection", new { id = sectId, blogId = Model.BlogId })
                    </div>
                }
        </div>
    </div>
</body>
</html>