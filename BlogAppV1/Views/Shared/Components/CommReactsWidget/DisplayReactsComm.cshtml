@model BlogAppV1.ViewModels.ReactsVms.ReactsAndCommVm

@inject BlogAppV1.Entities.DTOs.CurrentUserDto CurrentUser

@{
    var reactSet = Model.TypesAndUsers.Select(tu => tu.Type).ToHashSet();
}

@foreach (var type in reactSet)
{
    @*mai intai afisez ce reactii au fost date deja*@

    <li class="list-group-item @type" data-comm-id="@Model.CommId">
        @type
        @Model.TypesAndUsers.Where(r => r.Type == type).Count()
    </li>
}

@if (CurrentUser.IsAuthenticated)
{
<li>
    @*apoi fac un buton pentru ca userul sa poata reactiona si el*@
    @{
        var upr = Model.TypesAndUsers
            .FirstOrDefault(r => r.UserId == int.Parse(CurrentUser.Id));
        if (upr is null)
        {
            @*nu a reactionat pana acum*@
            @*<button id="@Model.CommId" class="btn-outline-dark small reactButComm">
                    Like
                </button>*@

            <button class="btn btn-secondary dropleft-toggle btn-sm" 
                    type="button" id="commReactMenu_@Model.CommId" 
                    data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Like
            </button>
        }
        else
        {
            @*a reactioant deja, afisez ce a ales*@
            <button id="@Model.CommId" class="btn-info small liked reactButComm">
                @upr.Type
            </button>
        }

        @*in acest caz reactionez la postare*@
        <input type="hidden" id="commData"
               data-comm-url-add="@Url.Action("ReactToComm", "Reactions")"
               data-comm-url-remove="@Url.Action("RemoveReactFromComm", "Reactions")">
    }
</li>
}
