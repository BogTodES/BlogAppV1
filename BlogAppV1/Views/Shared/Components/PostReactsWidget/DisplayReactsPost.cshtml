@model BlogAppV1.ViewModels.ReactsVms.ReactsAndPostVm

@inject BlogAppV1.Entities.DTOs.CurrentUserDto CurrentUser

@{
    var reactSet = Model.TypesAndUsers.Select(tu => tu.Type).ToHashSet();
}


@if (!Model.IsDetailed)
{
    // daca e varianta detaliata, arata pe toate
    reactSet =
        reactSet.OrderByDescending(type =>
                    Model.TypesAndUsers.Where(r => r.Type == type).Count())
                .Take(3).ToHashSet();
}


@foreach (var type in reactSet)
{
    @*mai intai afisez ce reactii au fost date deja*@

    <li class="list-group-item @type text-dark "
        data-post-id="@Model.PostId">
        @switch (type)
        {
            case "like":
                <span>&#128077</span>
                break;
            case "dislike":
                <span>&#128078</span>
                break;
            case "happy":
                <span>&#128515</span>
                break;
            case "sad":
                <span>&#128546</span>
                break;
            case "angry":
                <span>&#128548</span>
                break;
            case "wow":
                <span>&#128562</span>
                break;
            case "good job":
                <span>&#128076</span>
                break;
            case "disappointed":
                <span>&#128542</span>
                break;
        }
        <span class="badge badge-dark badge-pill">
            @Model.TypesAndUsers.Where(r => r.Type == type).Count()
        </span>
    </li>
}

@if (CurrentUser.IsAuthenticated)
{
    <li class="d-block">
        @*apoi fac un buton pentru ca userul sa poata reactiona si el*@
        @{
            var upr = Model.TypesAndUsers
                .FirstOrDefault(r => r.UserId == int.Parse(CurrentUser.Id));
            if (upr is null)
            {
                @*nu a reactionat pana acum*@
                <div class="btn-group dropdown " id="prm_@Model.PostId">
                    <button type="button" class="btn btn-secondary btn-sm reactButPost"
                            id="mainPostReact_@Model.PostId">
                        Like
                    </button>
                    <button type="button" class="btn btn-secondary dropdown-toggle dropdown-toggle-split"
                            data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <span class="sr-only">Toggle Dropright</span>
                    </button>
                    <div class="dropdown-menu postReactDropdown">

                    </div>
                </div>
            }
            else
            {
                @*a reactioant deja, afisez ce a ales*@

                <div class="btn-group dropdown" id="prm_@Model.PostId">
                    <button type="button" class="btn btn-info btn-sm reactButPost liked"
                            id="mainPostReact_@Model.PostId">
                        @upr.Type
                    </button>
                    <button type="button" class="btn btn-secondary dropdown-toggle dropdown-toggle-split"
                            data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <span class="sr-only">Toggle Dropright</span>
                    </button>
                    <div class="dropdown-menu postReactDropdown">

                    </div>
                </div>
            }
        }
    </li>

    <input type="hidden" id="wtf"
           data-post-id="@Model.PostId"
           data-post-url-add="@Url.Action("ReactToPost", "Reactions")"
           data-post-url-remove="@Url.Action("RemoveReactFromPost", "Reactions")">
}
