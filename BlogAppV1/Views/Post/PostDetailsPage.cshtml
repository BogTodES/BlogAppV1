@{
    ViewData["Title"] = "PostView";
}

@model BlogAppV1.ViewModels.PostVms.PostDetailsVm

@inject BlogAppV1.Entities.DTOs.CurrentUserDto CurrentUser

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>@Model.Title</title>
</head>
<body>
    <div class="card justify-content-center w-100 m-2 p-2 mb-0">
        <div class="card-body text-dark">
            <h2 class="text-capitalize card-title">
                @Model.Title
            </h2>
            <h6 class="card-subtitle">
                posted on @Model.Date.Date.ToShortDateString() by
                <a asp-controller="UserInfo" asp-action="ProfileOf" asp-route-username="@Model.OwnerUsername">@Model.OwnerUsername</a>
            </h6>

            @if (CurrentUser.IsAuthenticated)
                if ((int.Parse(CurrentUser.Id) == Model.OwnerId
                    || User.IsInRole("Admin")))
                {
                    <span class="float-right">
                        <button id="p_@Model.Id" class="removePost btn btn-sm btn-outline-danger">
                            Delete
                        </button>
                    </span>
                }

            <span class="float-right">
                <a asp-controller="Section" asp-action="SectionDetails" asp-route-sectId="@Model.SectId"
                   class="btn btn-sm btn-success">
                    Go To Section
                </a>
            </span>
            @if (CurrentUser.IsAuthenticated)
                if (int.Parse(CurrentUser.Id) == Model.OwnerId)
                {

                    <div class="dropdown postImg w-25">
                        <button class="btn btn-secondary dropdown-toggle" type="button"
                                id="postImgDropdownBut" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Add photo
                        </button>
                        <div class="dropdown-menu" aria-labelledby="postImgDropdownBut">
                            <a class="dropdown-item">
                                <form asp-action="AddPostPhoto" asp-controller="Media" enctype="multipart/form-data"
                                      class="small">
                                    <div class="form-group">
                                        <input type="file" accept="image/*" class="form-control"
                                               id="inputImgToLoad" name="img" />
                                        <input type="hidden" value="@Model.Id" name="postId" />
                                        <input type="submit" class="btn btn-sm btn-primary" value="Add" />
                                    </div>
                                </form>
                            </a>
                        </div>
                    </div>
                }
            <hr />
            <p class="card-text">
                @Model.Body
            </p>
            @if (Model.PhotoId != 0 && Model.PhotoId != null)
            {
                <img src="@Url.Action("GetPhoto", "Media", new { photoId = Model.PhotoId })" alt="postPhoto"
                     class="card-img card-img-bottom" />
            }
        </div>
        <div class="card-footer" id="reactsDiv">
            <ul class="list-group list-group-horizontal list-unstyled small">
                @await Component.InvokeAsync("PostReactsWidget",
                            new { postId = Model.Id })
            </ul>
        </div>
    </div>

    <div class="container justify-content-center">
        <div id="commentsBox" class="card border-info justify-content-center">
            <div class="card-header">
                <h5 class="text-muted">
                    Comments
                </h5>
            </div>
            <ul class="commentsList list-group">
                @foreach (var comm in Model.Comments)
                {
                    <li class="list-group-item border-bottom shadow-sm mb-2">
                        <div>
                            <h4 class="font-weight-bold">
                                <a asp-controller="UserInfo" asp-action="ProfileOf"
                                   asp-route-username="@comm.CommenterUsername"
                                   class="text-decoration-none">
                                    @comm.CommenterUsername
                                </a>
                            </h4>
                            <span class="float-right">
                                @if (CurrentUser.IsAuthenticated)
                                    if ((int.Parse(CurrentUser.Id) == Model.OwnerId
                                        || int.Parse(CurrentUser.Id) == comm.CommenterId)
                                      || User.IsInRole("Admin") || User.IsInRole("Moderator"))
                                    {
                                        <button id="c_@comm.Id" class="removeComm btn btn-sm btn-outline-danger rounded-pill">
                                            X
                                        </button>
                                    }
                            </span>

                            @if (comm.ElapsedTime.TotalSeconds < 60)
                            {
                                <p class="text-muted small">
                                    @comm.ElapsedTime.Seconds seconds ago
                                </p>
                            }
                            else if (comm.ElapsedTime.TotalMinutes < 60)
                            {
                                <p class="text-muted small">
                                    @comm.ElapsedTime.Minutes mins ago
                                </p>
                            }
                            else if (comm.ElapsedTime.TotalHours < 24)
                            {
                                <p class="text-muted small">
                                    @comm.ElapsedTime.Hours hours ago
                                </p>
                            }
                            else if (comm.ElapsedTime.TotalDays < 7)
                            {
                                <p class="text-muted small">
                                    @comm.ElapsedTime.Days days ago
                                </p>
                            }
                            else if (comm.ElapsedTime.TotalDays < 31)
                            {
                                <p class="text-muted small">
                                    @(comm.ElapsedTime.Days / 7) weeks ago
                                </p>
                            }
                            else if (comm.ElapsedTime.TotalDays <= 365)
                            {
                                <p class="text-muted small">
                                    @(comm.ElapsedTime.Days / 30) months ago
                                </p>
                            }
                            else
                            {
                                <p class="text-muted small">
                                    @(comm.ElapsedTime.Days / 365) years ago
                                </p>
                            }


                            <ul class="list-group-horizontal d-inline-flex list-unstyled small">
                                @await Component.InvokeAsync("CommReactsWidget",
                                            new { commId = comm.Id })
                            </ul>
                            <hr />
                            <div class="text-dark">
                                <p class="font-weight-normal">
                                    @comm.Body
                                </p>
                            </div>
                        </div>
                    </li>
                }
            </ul>
            <div class="card-footer">
                @if (CurrentUser.IsAuthenticated)
                {
                    <input type="text" id="newCommentBody" name="writeCommentBox"
                           placeholder="Write a comment..." class="border-dark rounded w-75" />
                    <button id="addCommentBut" name="@Model.Id">
                        <img src="/images/right-black-arrow-hi.png" alt="AddComment" width="20" height="20" />
                    </button>
                    <input type="hidden" id="addCommentAction"
                           data-add-comment-url="@Url.Action("AddComment", "Post")"
                           @*data-commenterId="@CurrentUser.Id"*@ />
                }
                else
                {
                    <input type="text" id="newCommentBody" name="writeCommentBox"
                           placeholder="LogIn first" class="border-dark rounded w-75" disabled />
                    <button id="addCommentBut" name="@Model.Id" disabled>
                        <img src="/images/right-black-arrow-hi.png" alt="AddComment" width="20" height="20" />
                    </button>
                }
            </div>
        </div>
    </div>

</body>
</html>
